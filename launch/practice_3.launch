<launch>
    
    <!-- Arguments, can be passed in using command line -->
    <arg name="waypoints_file"      default="waypoints_1m.csv"  doc="waypoints file name" />
    <arg name="lookahead_distance"  default="5"                doc="lookahead distance" />

    <!-- Nodes -->

    <group ns="planning">
        <!-- Waypoint loader -->
        <node pkg="autoware_mini" type="waypoint_loader.py" name="waypoint_loader" output="screen" required="true" >
            <param name="waypoints_file"    value="$(find autoware_mini)/data/trajectories/$(arg waypoints_file)" />
        </node>
        <!-- Global path visualizer -->
        <node pkg="autoware_mini" type="global_path_visualizer.py" name="global_path_visualizer" output="screen" required="true" />

        <rosparam command="load" file="$(find autoware_mini_practice_solutions)/config/planning.yaml"/>
    </group>

    <group ns="control">
        <!-- Waypoint follower -->
        <node pkg="autoware_mini_practice_solutions" type="pure_pursuit_follower.py" name="pure_pursuit_follower" output="screen" required="true" >
            <remap from="path" to="/planning/global_path" />
        </node>
        <rosparam command="load" file="$(find autoware_mini_practice_solutions)/config/control.yaml"/>
    </group>

    <group ns="vehicle">
        <!-- Bicycle_model simulator -->
        <node pkg="autoware_mini" type="bicycle_simulation.py" name="bicycle_simulation" output="screen" required="true" />

        <rosparam command="load" file="$(find autoware_mini)/config/vehicle.yaml" />
    </group>

    <!-- Rviz -->
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find autoware_mini_practice_solutions)/rviz/practice_3.rviz" required="true" />

    <!-- Config -->
    <rosparam command="load" file="$(find autoware_mini_practice_solutions)/config/localization.yaml" ns="localization"/>
</launch>
